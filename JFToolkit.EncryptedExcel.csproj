<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!-- Target multiple frameworks for broader compatibility -->
    <TargetFrameworks>netstandard2.0;net6.0;net8.0;net9.0</TargetFrameworks>
    
    <!-- Language version for C# features -->
    <LangVersion>12.0</LangVersion>
    <Nullable>enable</Nullable>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <GenerateTargetFrameworkAttribute>false</GenerateTargetFrameworkAttribute>
    
    <!-- NuGet Package Information -->
    <PackageId>JFToolkit.EncryptedExcel</PackageId>
    <Version>1.4.0</Version>
    <Authors>JyslaFancy</Authors>
    <Company>JFToolkit</Company>
    <Product>JFToolkit.EncryptedExcel</Product>
    <Description>A clean, focused .NET library for working with password-encrypted Excel files. Features the new SecureExcelWorkbook API for simple encrypted Excel workflows: open → modify → save. Built on NPOI with Excel automation for encryption. Reading and modifying works on any platform; saving with encryption requires Microsoft Excel installed (Windows).</Description>
    <PackageTags>excel;encryption;password;npoi;xlsx;xlsm;xls;encrypted;automation;office;macro;netstandard;net6;net8;net9</PackageTags>
    <PackageProjectUrl>https://github.com/JyslaFancy/JFToolkit.EncryptedExcel</PackageProjectUrl>
    <RepositoryUrl>https://github.com/JyslaFancy/JFToolkit.EncryptedExcel</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageReleaseNotes>
      v1.4.0 - MAJOR CLEANUP AND RENAME:
      - BREAKING: Renamed EncryptedXlsmManager to SecureExcelWorkbook (more descriptive)
      - DOCUMENTATION: Clarified Excel installation requirement for encryption features
      - Repository cleanup: Removed test files, examples, and alternative implementations from main library
      - Streamlined to core functionality: SecureExcelWorkbook for simple workflow
      - Fixed single password prompt issue (no more double password prompts in Excel)
      - Supports separate file saving with SaveAs() method
      - Cleaner API focused on the most common use case: open, modify, save encrypted Excel
      - Simplified project structure for easier maintenance and understanding
      
      v1.3.0:
      - ENHANCED: Improved encryption fallback system with better error messages
      - Added framework for future cross-platform encryption (OpenXML placeholder)
      - Better detection and handling when Excel automation is unavailable
      - Clearer guidance for users in environments without Excel
      - Simplified approach focusing on reliable Excel automation when available
      - Maintains excellent reading capabilities for encrypted files on all platforms
      - Preparation for future true cross-platform encryption implementation
      
      v1.2.5:
      - SIMPLIFIED FIX: Removed complex two-stage save process that was causing Excel content errors
      - Direct .xlsm save with explicit format parameters and VBA automation security settings
      - Added explicit false parameters for Excel SaveAs to prevent format confusion
      - Improved PowerShell automation with .xlsm-specific handling
      - Should completely resolve "We found a problem with some content" errors
      
      v1.2.4:
      - CRITICAL FIX: Completely resolved "We found a problem with some content" error for .xlsm files
      - Implemented two-stage save process: .xlsx first, then convert to .xlsm in Excel
      - This eliminates content format inconsistencies that caused Excel errors
      - Files now open cleanly in Excel without any error prompts or recovery dialogs
      - Improved Excel automation reliability for macro-enabled files
      
      v1.2.3:
      - CRITICAL FIX: Resolved "We found a problem with some content" error when opening encrypted .xlsm files in Excel
      - Fixed file format specification in Excel automation (COM and PowerShell)
      - Properly handle .xlsm file format (52 - xlOpenXMLWorkbookMacroEnabled) during encryption
      - Fixed temporary file handling to prevent corruption during .xlsm encryption
      - Excel will no longer prompt for content recovery when opening encrypted .xlsm files
      
      v1.2.2:
      - FIXED: Package author metadata corrected from "Haral" to "JyslaFancy"
      - Ensures proper attribution in NuGet Package Manager displays
      
      v1.2.1:
      - FIXED: "File format not valid" error when creating .xlsm files
      - Improved .xlsm handling to avoid Excel compatibility issues
      - Added clear documentation about NPOI .xlsm limitations
      - Files with .xlsm extension are now saved as .xlsx to prevent errors
      - Added helper methods for proper macro-enabled file workflow
      
      v1.2.0:
      - Added explicit support for macro-enabled Excel files (.xlsm)
      - Enhanced documentation to clearly indicate .xlsm support
      - Added macro-enabled file example in Examples.cs
      - Updated package tags to include 'xlsm' and 'macro'
      - Macros are preserved when reading and saving .xlsm files
      
      v1.1.1:
      - Fixed GitHub repository links in NuGet package metadata
      - Package now correctly links to https://github.com/JyslaFancy/JFToolkit.EncryptedExcel
      
      v1.1.0:
      - Added support for .NET Standard 2.0 (broader compatibility)
      - Added support for .NET 6.0, .NET 8.0, and .NET 9.0
      - Compatible with .NET Framework 4.6.1+ via .NET Standard 2.0
      - Compatible with .NET Core 2.0+ via .NET Standard 2.0
      - Improved cross-platform compatibility
      
      v1.0.0:
      - Read password-encrypted Excel files (.xlsx, .xls)
      - Modify cell data with type safety
      - Add new rows and columns
      - Save with encryption using Excel automation
      - Comprehensive error handling and fallback options
      - Extension methods for easy Excel manipulation
    </PackageReleaseNotes>
    <Copyright>Copyright © 2025 JFToolkit</Copyright>
    
    <!-- Build Configuration -->
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    
    <!-- Target multiple frameworks for broader compatibility -->
    <TargetFrameworks>netstandard2.0;net6.0;net8.0;net9.0</TargetFrameworks>
    
    <!-- Language version for C# features -->
    <LangVersion>12.0</LangVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <WarningsAsErrors />
    <NoWarn>$(NoWarn);CA1416</NoWarn> <!-- Suppress Windows-specific COM warnings -->
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <NoWarn>$(NoWarn);CA1416</NoWarn> <!-- Suppress Windows-specific COM warnings -->
  </PropertyGroup>

  <!-- Framework-specific properties -->
  <PropertyGroup Condition="'$(TargetFramework)' != 'netstandard2.0'">
    <ImplicitUsings>enable</ImplicitUsings>
  </PropertyGroup>

  <!-- Additional packages for .NET Standard 2.0 compatibility -->
  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <PackageReference Include="System.IO.FileSystem" Version="4.3.0" />
    <PackageReference Include="System.Diagnostics.Process" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="NPOI" Version="2.7.4" />
  </ItemGroup>

  <!-- Include README and other documentation files in the package -->
  <ItemGroup>
    <None Include="README.md" Pack="true" PackagePath="\" />
  </ItemGroup>

  <!-- Exclude test projects from compilation -->
  <ItemGroup>
    <Compile Remove="QuickTest\**" />
    <Compile Remove="RealWorldTest\**" />
    <Compile Remove="SaveTest\**" />
    <Compile Remove="TestEncryptedExcel\**" />
    <Compile Remove="VerifyTest\**" />
    <None Remove="QuickTest\**" />
    <None Remove="RealWorldTest\**" />
    <None Remove="SaveTest\**" />
    <None Remove="TestEncryptedExcel\**" />
    <None Remove="VerifyTest\**" />
  </ItemGroup>

  <!-- No example files to package (removed for cleaner library) -->
  <!-- Example usage is documented in the README.md instead -->

</Project>
